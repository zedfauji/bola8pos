{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\girishlocal\\\\Downloads\\\\Billiard-POS-System-CloudSQL\\\\bola8pos-ai\\\\billiard-pos\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState } from 'react';\n\n// 1. Create and export context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// 2. Named export for provider\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user] = useState({\n    name: \"Admin\",\n    role: \"manager\"\n  });\n  const login = () => console.log(\"Login function\");\n  const logout = () => console.log(\"Logout function\");\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n// 3. Hook for easy context consumption\n_s(AuthProvider, \"JjS2d2lFu2QnSjgq+K+/oFGCtcI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","name","role","login","console","log","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","useContext","Error","$RefreshReg$"],"sources":["C:/Users/girishlocal/Downloads/Billiard-POS-System-CloudSQL/bola8pos-ai/billiard-pos/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState } from 'react';\n\n// 1. Create and export context\nexport const AuthContext = createContext();\n\n// 2. Named export for provider\nexport const AuthProvider = ({ children }) => {\n  const [user] = useState({ \n    name: \"Admin\",\n    role: \"manager\"\n  });\n\n  const login = () => console.log(\"Login function\");\n  const logout = () => console.log(\"Logout function\");\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// 3. Hook for easy context consumption\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,CAAC,GAAGP,QAAQ,CAAC;IACtBQ,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAGA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EACjD,MAAMC,MAAM,GAAGA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAEnD,oBACEV,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,IAAI;MAAEG,KAAK;MAAEG;IAAO,CAAE;IAAAR,QAAA,EAClDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAb,EAAA,CAhBaF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAiBzB,OAAO,MAAMiB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGC,UAAU,CAACrB,WAAW,CAAC;EACvC,IAAI,CAACoB,OAAO,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAC,0CAA0C,CAAC;EAC7D;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}